public class Driver {
    private static int level = 100;
    private static Predictor predictor;
    private static long time = 0;

    public static void main(String[] argv) {
        predictor = new Predictor();

        predictor.update(100, 0, 0);
        show(predictor.secondsUntilDrained());

        for (int i = 0; i < 90; i++) {
            passTime(90 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        for (int i = 0; i < 4; i++) {
            passTime(1800 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        recharge();
        for (int i = 0; i < 90; i++) {
            passTime(90 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        for (int i = 0; i < 4; i++) {
            passTime(1800 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        recharge();
        for (int i = 0; i < 90; i++) {
            passTime(90 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        for (int i = 0; i < 4; i++) {
            passTime(1800 * 1000);
            level -= 1;

            predictor.update(level, 0, 0);
            show(predictor.secondsUntilDrained());
        }

        recharge();
    }

    private static void passTime(int ms) {
        time += ms;
        predictor.passTime(ms);
    }

    private static void show(int seconds_left) {
        double elapsed_minutes = time / 1000.0 / 60.0;
        time = 0;
        String el_min = String.format("%.1fm", elapsed_minutes);

        double hours_left = seconds_left / (60.0 * 60.0);
        String hrs_l = String.format("%.1fh", hours_left);

        System.out.println(el_min + "; " + level + "%: " + hrs_l);
        System.out.println("--------------------------------------------------------------------------------------------");
    }

    private static void recharge() {
        predictor.update(level, 2, 2);
        while (level < 100) {
            passTime(120 * 1000);
            level += 1;
            predictor.update(level, 2, 2);
        }
        System.out.println("-- CHARGED --");
    }
}
